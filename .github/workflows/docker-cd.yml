name: CD-test

on:
  schedule:
    - cron: "30 23 * * *"
  push:
    branches: [main, dev]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [main, dev]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: cat /etc/hosts.allow
      - run: 'sudo echo "mysqld: ALL" >> /etc/hosts.allow'
      - run: cat /etc/hosts.allow
      - run: sudo apt update
      - run: sudo apt install mariadb-client mariadb-client-10.3 -f -y
      - name: Create Docker Network
        run: docker network create testNetwork
      - name: Start containers
        run: docker-compose -f "test/docker-compose.yaml" up -d
      - run: docker-compose -f "test/docker-compose.yaml" ps
      - run: docker compose -f "test/docker-compose.yaml" cp test/data/mysql/init.sql db:/init.sql
      - run: docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' openvisu-test_db_1
      - run: mariadb -uroot -p"yi5S7LHWONx0qWhd" -h 127.0.0.1 -P 3306 openvisu < test/data/mysql/init.sql
      - run: docker-compose -f "test/docker-compose.yaml" exec -T db sh -c 'exec mysql -uroot -p"yi5S7LHWONx0qWhd" -h db -P 3306 openvisu ' < test/data/mysql/init.sql
      - run: flutter --version
      - run: flutter pub get
      - name: Run tests
        run: flutter test --coverage
